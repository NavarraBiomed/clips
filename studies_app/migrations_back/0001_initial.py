# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.core.validators
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CancerCase',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('group', models.IntegerField(verbose_name='Group', choices=[(0, 'Control group'), (1, 'Treatment group')], null=True, blank=True)),
                ('id_for_hospital', models.IntegerField(verbose_name='Id for hospital', null=True, blank=True)),
                ('id_for_doctor', models.IntegerField(verbose_name='Id for doctor', null=True, blank=True)),
                ('organ', models.CharField(max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClipsCase',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('group', models.IntegerField(verbose_name='Group', choices=[(0, 'Control group'), (1, 'Treatment group')], null=True, blank=True)),
                ('id_for_hospital', models.IntegerField(verbose_name='Id for hospital', null=True, blank=True)),
                ('id_for_doctor', models.IntegerField(verbose_name='Id for doctor', null=True, blank=True)),
                ('date', models.DateField(verbose_name='Date', null=True, blank=True)),
                ('age', models.IntegerField(verbose_name='Age', validators=[django.core.validators.MinValueValidator(0)], null=True, blank=True)),
                ('age_interval', models.IntegerField(verbose_name='Age interval', choices=[(1, '< 60'), (2, '60-74'), (3, '>= 75')], null=True, max_length=2, blank=True)),
                ('sex', models.IntegerField(verbose_name='Sex', choices=[(1, 'Male'), (2, 'Female')], null=True, max_length=1, blank=True)),
                ('asa', models.IntegerField(verbose_name='ASA', choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV')], null=True, blank=True)),
                ('hypertension', models.IntegerField(verbose_name='Hypertension', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hb', models.FloatField(verbose_name='HB (g/dL)', null=True, blank=True)),
                ('platelets', models.IntegerField(verbose_name='Platelets (x10‚Åπ/L)', null=True, blank=True)),
                ('inr', models.FloatField(verbose_name='INR', null=True, blank=True)),
                ('pt', models.IntegerField(verbose_name='PT (s)', null=True, blank=True)),
                ('aspirin', models.IntegerField(verbose_name='Aspirin', choices=[(0, 'No'), (1, '100mg cease'), (2, '300mg cease'), (3, '100mg during EMR'), (4, '300mg during EMR')], null=True, blank=True)),
                ('anticoagulants', models.IntegerField(verbose_name='Anticoagulants', choices=[(0, 'No'), (1, 'Aspirin'), (2, 'Clopidogrel'), (3, 'Other antiagregant'), (4, 'Warfarin'), (5, 'NSAID'), (6, '2 NSAID including aspiring or not'), (7, 'Aspirin+clopidogrel'), (8, 'NACOs')], null=True, blank=True)),
                ('heparinbridgetherapy', models.IntegerField(verbose_name='Heparin Bridge Therapy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nombre_p_activo_antiagreg_anticoag', models.IntegerField(verbose_name='Active ingredients anticoagulant/antiagregant', null=True, blank=True)),
                ('day_of_reintroduction_antiagregant', models.IntegerField(verbose_name='Day of reintroduction anticoagulant/antiagregant', null=True, blank=True)),
                ('paris_calif', models.IntegerField(verbose_name='Paris Clasif.', choices=[(1, '0Is'), (2, '0IIa'), (3, '0IIa+0Is'), (4, '0Is+0IIa'), (5, '0IIb'), (6, '0IIc'), (7, '0IIa+0IIc'), (8, '0IIb+0IIc'), (9, '0IIb+0IIa')], null=True, blank=True)),
                ('lst_yn', models.IntegerField(verbose_name='LST yn', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('lst_morphology', models.IntegerField(verbose_name='LST Morphology', choices=[(1, 'Granular homogeneous'), (2, 'Focal nodular mixed type'), (3, 'Whole nodular mixed type'), (4, 'Flat elevated'), (5, 'Psudodepressed')], null=True, blank=True)),
                ('large_nodule_one_cm', models.IntegerField(verbose_name='Large nodule 1cm', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('demacrated_depressed_area', models.IntegerField(verbose_name='Demacrated depressed area', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('sclerous_wall_change', models.IntegerField(verbose_name='Sclerous wall change', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fold_convergency', models.IntegerField(verbose_name='Fold convergency', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('chicken_skin_mucosa_around', models.IntegerField(verbose_name='Chicken skin mucosa around', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('maximum_size_mm', models.IntegerField(verbose_name='Maximum size (mm)', null=True, blank=True)),
                ('area_square_cm', models.IntegerField(verbose_name='Area (cm2)', null=True, blank=True)),
                ('location', models.IntegerField(verbose_name='Location', choices=[(1, 'Rectum'), (2, 'Left colon'), (3, 'Splenic flexure'), (4, 'Transverse'), (5, 'Hepatic'), (6, 'Ascendent'), (7, 'Cecum')], null=True, blank=True)),
                ('ileocecal_valve_involvement', models.IntegerField(verbose_name='Ileocecal valve involvement', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('high_definition', models.IntegerField(verbose_name='High definition', choices=[(1, 'Conventional endoscope'), (2, 'High definition'), (3, 'Optic magnification')], null=True, blank=True)),
                ('endoscopemodel', models.CharField(verbose_name='Endoscope model', null=True, max_length=50, blank=True)),
                ('nbi', models.IntegerField(verbose_name='NBI', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nbi_sano', models.IntegerField(verbose_name='NBI sano', choices=[(1, 'I'), (2, 'II'), (3, 'IIIA'), (4, 'IIIB')], null=True, blank=True)),
                ('nbi_nice', models.IntegerField(verbose_name='NBI NICE', choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3')], null=True, blank=True)),
                ('cromoendoscopy', models.IntegerField(verbose_name='Cromoendoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('kudo', models.IntegerField(verbose_name='Kudo', choices=[(1, 'I'), (2, 'II'), (3, 'IIIS'), (4, 'IIIL'), (5, 'IV'), (6, 'V-I'), (7, 'V-N')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_a', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 1', choices=[(1, 'Adenoma'), (2, 'Serrated')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_b', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 2', choices=[(1, 'NodisplasiaToSuperficial submucosal carcinoma'), (2, 'Deep submucosal carcinoma')], null=True, blank=True)),
                ('correct_dx_adenoma_serrated', models.IntegerField(verbose_name='Correct Dx Adenoma Serrated', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('correct_dx_invasion', models.IntegerField(verbose_name='Correct Dx Invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('histology', models.IntegerField(verbose_name='Histology', choices=[(1, 'Adenoma'), (2, 'HGD-intraepitelial carcinoma in adenoma'), (3, 'Intramucosal carcinoma in adenoma'), (4, 'Superficial submucosal carcinoma in adenoma'), (5, 'Deep submucosal carcinoma in adenoma'), (6, 'Hyperplastic'), (7, 'Sesil Serrated polyp'), (8, 'Traditional Serrated Adenoma'), (9, 'Polyp Serrated Mixed or serrated polyp with dysplasia'), (10, 'Intraepitelial carcinoma Any serrated'), (11, 'Intramucosal carcinoma Any serrated'), (12, 'Superficial submucosa carc. Any serrated'), (13, 'Deep submucosa carc. Any serrated'), (14, 'Carinoid')], null=True, blank=True)),
                ('histol_simplified', models.IntegerField(verbose_name='Histology simplified', choices=[(1, 'Adenoma'), (2, 'HGD-Imucosal'), (3, 'Invasive adenoma'), (4, 'Serrated'), (5, 'HGD-Imucosal serrated'), (6, 'Invasive serrated'), (7, 'Carcinoid')], null=True, blank=True)),
                ('time_of_procedure_in_mins', models.IntegerField(verbose_name='Time of procedure (m)', null=True, blank=True)),
                ('difficulty_of_emr', models.IntegerField(verbose_name='Dificutly of EMR', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('accesibility', models.IntegerField(verbose_name='Accesibility', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('resection', models.IntegerField(verbose_name='Resection', choices=[(1, 'Piecemeal complete'), (2, 'Piecemeal incomplete'), (3, 'En bloc R0'), (4, 'En bloq incomplete')], null=True, blank=True)),
                ('previous_biopsy', models.IntegerField(verbose_name='Previous biopsy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('previous_attempt', models.IntegerField(verbose_name='Previous attempt', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('non_lifting_sign', models.IntegerField(verbose_name='Non lifting sign', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('technique', models.IntegerField(verbose_name='Technique', choices=[(1, 'EMR'), (2, 'Hybrid-EMR')], null=True, blank=True)),
                ('technique_two', models.IntegerField(verbose_name=' Technique 2', choices=[(1, 'One-step'), (2, 'Two-steps')], null=True, blank=True)),
                ('limit_marks', models.IntegerField(verbose_name='Limit marks', choices=[(0, 'No marks'), (1, 'APC marks')], null=True, blank=True)),
                ('injection', models.IntegerField(verbose_name='Injection', choices=[(0, 'No'), (1, 'Saline'), (2, 'Glicerin'), (3, 'Hyaluronic'), (4, 'Hidrox-propil-cellulose: VOLUVEN(r)'), (5, 'Gelafundin'), (6, 'Others')], null=True, blank=True)),
                ('adrenaline', models.IntegerField(verbose_name='Adrenaline', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('endocut', models.IntegerField(verbose_name='Endocut/Blended', choices=[(1, 'Only cut current'), (2, 'Only coagulation current'), (3, 'Endocut/Blended')], null=True, blank=True)),
                ('electrosurgical_generator_model', models.CharField(verbose_name='Electrosurgical generator model', null=True, max_length=100, blank=True)),
                ('polyp_retrieval', models.IntegerField(verbose_name='Polyp retrieval', choices=[(1, 'Roth net'), (2, 'By aspiration'), (3, 'Both methods'), (4, 'By snare')], null=True, blank=True)),
                ('argon_PC', models.IntegerField(verbose_name='Argon PC', choices=[(0, 'No'), (1, 'Yes: incomplete resection'), (2, 'Yes: coagulation'), (3, 'Yes: per protocol')], null=True, blank=True)),
                ('coagulation_forceps', models.IntegerField(verbose_name='Coagulation forceps', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('snare_tip_soft_coagulation', models.IntegerField(verbose_name='Snare tip soft coagulation', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('cs_cut_watts', models.IntegerField(verbose_name='Cut (watts)', null=True, blank=True)),
                ('cs_cut_mode', models.IntegerField(verbose_name='Endocut mode', choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True, blank=True)),
                ('cs_coagulation_watts', models.IntegerField(verbose_name='Coagulation (watts)', null=True, blank=True)),
                ('cs_coagulation_mode', models.IntegerField(verbose_name='Coagulation mode', choices=[(0, 'Soft'), (1, 'Force')], null=True, blank=True)),
                ('clips_control_group', models.IntegerField(verbose_name='Clips control group', choices=[(0, 'No'), (1, 'Punctual coagulation')], null=True, blank=True)),
                ('clips_tratment_group', models.IntegerField(verbose_name='Clips treatment group', choices=[(1, 'Complete closure with complete mucosal apposition'), (2, 'Complete closure without complete mucosal apposition'), (3, 'Total failed closure'), (4, 'Partial failed closure'), (5, 'Closure not tried')], null=True, blank=True)),
                ('clips_n_lote', models.IntegerField(verbose_name='Lot number', null=True, blank=True)),
                ('clips_exp_date', models.DateField(verbose_name='Expiration date', null=True, blank=True)),
                ('not_tired_closure_by', models.IntegerField(verbose_name='Closure not tried because of', choices=[(1, 'Big size'), (2, 'Difficult location'), (3, 'Both')], null=True, blank=True)),
                ('closure_technique', models.IntegerField(verbose_name='Closure technique', choices=[(1, 'Simple clipping'), (2, 'Clip-Poly loop'), (3, 'Clip Silk loop')], null=True, blank=True)),
                ('number_clips_needed', models.IntegerField(verbose_name='Number of clips needed', null=True, blank=True)),
                ('perforation', models.IntegerField(verbose_name='Perforation', choices=[(0, 'No'), (1, 'Yes: endoscopic resolution'), (2, 'Yes: surgical resolution')], null=True, blank=True)),
                ('surgery_from_endoscopy', models.IntegerField(verbose_name='Surgery from endoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('surgery_by_complication', models.IntegerField(verbose_name='Surgery by complication', choices=[(0, 'No'), (1, 'Yes: bleeding'), (2, 'Yes: perforation')], null=True, blank=True)),
                ('bleeding', models.IntegerField(verbose_name='Bleeding', choices=[(0, 'No'), (1, 'During no clinical impact-autol'), (2, 'During exploration with clinical impact'), (3, '24h'), (4, '24-48h'), (5, '3-7 days'), (6, '>7 days')], null=True, blank=True)),
                ('immediate_bleeding', models.IntegerField(verbose_name='Immediate bleeding', choices=[(0, 'No'), (1, 'Yes: during exploration with clinical impact'), (2, 'Yes: during exploration without clinical impact')], null=True, blank=True)),
                ('delayed_bleeding', models.IntegerField(verbose_name='Delayed bleeding', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('bleeding_treatment', models.IntegerField(verbose_name='Bleeding treatment', choices=[(0, 'No'), (1, 'Inyection'), (2, 'Clipping'), (3, 'ArgonPC'), (4, 'Coagulation forceps'), (5, '2 methods')], null=True, blank=True)),
                ('transfusion', models.IntegerField(verbose_name='Transfusion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('pps', models.IntegerField(verbose_name='Post polypectomy syndrome', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fever', models.IntegerField(verbose_name='Fever', choices=[(0, 'No'), (1, '37-37.9'), (2, '38 or more')], null=True, blank=True)),
                ('pain_requiring_medical_intervention', models.IntegerField(verbose_name='Pain requiring medical intervantion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hospital_stay_by_technique', models.IntegerField(verbose_name='Hospital stay by technique', null=True, blank=True)),
                ('hospital_stay_by_complication', models.IntegerField(verbose_name='Hospital stay by complication', null=True, blank=True)),
                ('follow_up_months', models.IntegerField(verbose_name='Follow up months', null=True, blank=True)),
                ('successful_treatment', models.IntegerField(verbose_name=' Successful treatment', choices=[(0, 'No: surgical treatment'), (1, 'Yes: in 1 session (includes one or two steps'), (2, 'Yes, in 2 or more sessions (one session and treatment in controls')], null=True, blank=True)),
                ('sedation', models.IntegerField(verbose_name='Sedation', choices=[(0, 'Without sedation'), (1, 'By gastroenterologist other than Propofol'), (2, 'By gastroenterologist based on Propofol'), (3, 'By anesthesiologist')], null=True, blank=True)),
                ('last_date_endoscopic_follow_up', models.DateField(verbose_name='Last date endoscopic follow up', null=True, blank=True)),
                ('recurrence_three_six_months_control', models.IntegerField(verbose_name='Recurrence 3-6 months control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('recurrenec_one_year_control', models.IntegerField(verbose_name='Recurrence 1 year control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('global_recurrence', models.IntegerField(verbose_name='Global recurrence', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('other_complications_comments', models.TextField(verbose_name='Other complications comments', null=True, max_length=500, blank=True)),
                ('other_comments', models.TextField(verbose_name='Other comments', null=True, max_length=500, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationalCase',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('group', models.IntegerField(verbose_name='Group', choices=[(0, 'Control group'), (1, 'Treatment group')], null=True, blank=True)),
                ('id_for_hospital', models.IntegerField(verbose_name='Id for hospital', null=True, blank=True)),
                ('id_for_doctor', models.IntegerField(verbose_name='Id for doctor', null=True, blank=True)),
                ('date', models.DateField(verbose_name='Date', null=True, blank=True)),
                ('age', models.IntegerField(verbose_name='Age', validators=[django.core.validators.MinValueValidator(0)], null=True, blank=True)),
                ('age_interval', models.IntegerField(verbose_name='Age interval', choices=[(1, '< 60'), (2, '60-74'), (3, '>= 75')], null=True, max_length=2, blank=True)),
                ('sex', models.IntegerField(verbose_name='Sex', choices=[(1, 'Male'), (2, 'Female')], null=True, max_length=1, blank=True)),
                ('asa', models.IntegerField(verbose_name='ASA', choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV')], null=True, blank=True)),
                ('hypertension', models.IntegerField(verbose_name='Hypertension', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hb', models.FloatField(verbose_name='HB (g/dL)', null=True, blank=True)),
                ('platelets', models.IntegerField(verbose_name='Platelets (x10‚Åπ/L)', null=True, blank=True)),
                ('inr', models.FloatField(verbose_name='INR', null=True, blank=True)),
                ('pt', models.IntegerField(verbose_name='PT (s)', null=True, blank=True)),
                ('aspirin', models.IntegerField(verbose_name='Aspirin', choices=[(0, 'No'), (1, '100mg cease'), (2, '300mg cease'), (3, '100mg during EMR'), (4, '300mg during EMR')], null=True, blank=True)),
                ('anticoagulants', models.IntegerField(verbose_name='Anticoagulants', choices=[(0, 'No'), (1, 'Aspirin'), (2, 'Clopidogrel'), (3, 'Other antiagregant'), (4, 'Warfarin'), (5, 'NSAID'), (6, '2 NSAID including aspiring or not'), (7, 'Aspirin+clopidogrel'), (8, 'NACOs')], null=True, blank=True)),
                ('heparinbridgetherapy', models.IntegerField(verbose_name='Heparin Bridge Therapy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nombre_p_activo_antiagreg_anticoag', models.IntegerField(verbose_name='Active ingredients anticoagulant/antiagregant', null=True, blank=True)),
                ('day_of_reintroduction_antiagregant', models.IntegerField(verbose_name='Day of reintroduction anticoagulant/antiagregant', null=True, blank=True)),
                ('paris_calif', models.IntegerField(verbose_name='Paris Clasif.', choices=[(1, '0Is'), (2, '0IIa'), (3, '0IIa+0Is'), (4, '0Is+0IIa'), (5, '0IIb'), (6, '0IIc'), (7, '0IIa+0IIc'), (8, '0IIb+0IIc'), (9, '0IIb+0IIa')], null=True, blank=True)),
                ('lst_yn', models.IntegerField(verbose_name='LST yn', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('lst_morphology', models.IntegerField(verbose_name='LST Morphology', choices=[(1, 'Granular homogeneous'), (2, 'Focal nodular mixed type'), (3, 'Whole nodular mixed type'), (4, 'Flat elevated'), (5, 'Psudodepressed')], null=True, blank=True)),
                ('large_nodule_one_cm', models.IntegerField(verbose_name='Large nodule 1cm', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('demacrated_depressed_area', models.IntegerField(verbose_name='Demacrated depressed area', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('sclerous_wall_change', models.IntegerField(verbose_name='Sclerous wall change', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fold_convergency', models.IntegerField(verbose_name='Fold convergency', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('chicken_skin_mucosa_around', models.IntegerField(verbose_name='Chicken skin mucosa around', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('maximum_size_mm', models.IntegerField(verbose_name='Maximum size (mm)', null=True, blank=True)),
                ('area_square_cm', models.IntegerField(verbose_name='Area (cm2)', null=True, blank=True)),
                ('location', models.IntegerField(verbose_name='Location', choices=[(1, 'Rectum'), (2, 'Left colon'), (3, 'Splenic flexure'), (4, 'Transverse'), (5, 'Hepatic'), (6, 'Ascendent'), (7, 'Cecum')], null=True, blank=True)),
                ('ileocecal_valve_involvement', models.IntegerField(verbose_name='Ileocecal valve involvement', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('high_definition', models.IntegerField(verbose_name='High definition', choices=[(1, 'Conventional endoscope'), (2, 'High definition'), (3, 'Optic magnification')], null=True, blank=True)),
                ('endoscopemodel', models.CharField(verbose_name='Endoscope model', null=True, max_length=50, blank=True)),
                ('nbi', models.IntegerField(verbose_name='NBI', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nbi_sano', models.IntegerField(verbose_name='NBI sano', choices=[(1, 'I'), (2, 'II'), (3, 'IIIA'), (4, 'IIIB')], null=True, blank=True)),
                ('nbi_nice', models.IntegerField(verbose_name='NBI NICE', choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3')], null=True, blank=True)),
                ('cromoendoscopy', models.IntegerField(verbose_name='Cromoendoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('kudo', models.IntegerField(verbose_name='Kudo', choices=[(1, 'I'), (2, 'II'), (3, 'IIIS'), (4, 'IIIL'), (5, 'IV'), (6, 'V-I'), (7, 'V-N')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_a', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 1', choices=[(1, 'Adenoma'), (2, 'Serrated')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_b', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 2', choices=[(1, 'NodisplasiaToSuperficial submucosal carcinoma'), (2, 'Deep submucosal carcinoma')], null=True, blank=True)),
                ('correct_dx_adenoma_serrated', models.IntegerField(verbose_name='Correct Dx Adenoma Serrated', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('correct_dx_invasion', models.IntegerField(verbose_name='Correct Dx Invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('histology', models.IntegerField(verbose_name='Histology', choices=[(1, 'Adenoma'), (2, 'HGD-intraepitelial carcinoma in adenoma'), (3, 'Intramucosal carcinoma in adenoma'), (4, 'Superficial submucosal carcinoma in adenoma'), (5, 'Deep submucosal carcinoma in adenoma'), (6, 'Hyperplastic'), (7, 'Sesil Serrated polyp'), (8, 'Traditional Serrated Adenoma'), (9, 'Polyp Serrated Mixed or serrated polyp with dysplasia'), (10, 'Intraepitelial carcinoma Any serrated'), (11, 'Intramucosal carcinoma Any serrated'), (12, 'Superficial submucosa carc. Any serrated'), (13, 'Deep submucosa carc. Any serrated'), (14, 'Carinoid')], null=True, blank=True)),
                ('histol_simplified', models.IntegerField(verbose_name='Histology simplified', choices=[(1, 'Adenoma'), (2, 'HGD-Imucosal'), (3, 'Invasive adenoma'), (4, 'Serrated'), (5, 'HGD-Imucosal serrated'), (6, 'Invasive serrated'), (7, 'Carcinoid')], null=True, blank=True)),
                ('time_of_procedure_in_mins', models.IntegerField(verbose_name='Time of procedure (m)', null=True, blank=True)),
                ('difficulty_of_emr', models.IntegerField(verbose_name='Dificutly of EMR', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('accesibility', models.IntegerField(verbose_name='Accesibility', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('resection', models.IntegerField(verbose_name='Resection', choices=[(1, 'Piecemeal complete'), (2, 'Piecemeal incomplete'), (3, 'En bloc R0'), (4, 'En bloq incomplete')], null=True, blank=True)),
                ('previous_biopsy', models.IntegerField(verbose_name='Previous biopsy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('previous_attempt', models.IntegerField(verbose_name='Previous attempt', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('non_lifting_sign', models.IntegerField(verbose_name='Non lifting sign', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('technique', models.IntegerField(verbose_name='Technique', choices=[(1, 'EMR'), (2, 'Hybrid-EMR')], null=True, blank=True)),
                ('technique_two', models.IntegerField(verbose_name=' Technique 2', choices=[(1, 'One-step'), (2, 'Two-steps')], null=True, blank=True)),
                ('limit_marks', models.IntegerField(verbose_name='Limit marks', choices=[(0, 'No marks'), (1, 'APC marks')], null=True, blank=True)),
                ('injection', models.IntegerField(verbose_name='Injection', choices=[(0, 'No'), (1, 'Saline'), (2, 'Glicerin'), (3, 'Hyaluronic'), (4, 'Hidrox-propil-cellulose: VOLUVEN(r)'), (5, 'Gelafundin'), (6, 'Others')], null=True, blank=True)),
                ('adrenaline', models.IntegerField(verbose_name='Adrenaline', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('endocut', models.IntegerField(verbose_name='Endocut/Blended', choices=[(1, 'Only cut current'), (2, 'Only coagulation current'), (3, 'Endocut/Blended')], null=True, blank=True)),
                ('electrosurgical_generator_model', models.CharField(verbose_name='Electrosurgical generator model', null=True, max_length=100, blank=True)),
                ('polyp_retrieval', models.IntegerField(verbose_name='Polyp retrieval', choices=[(1, 'Roth net'), (2, 'By aspiration'), (3, 'Both methods'), (4, 'By snare')], null=True, blank=True)),
                ('argon_PC', models.IntegerField(verbose_name='Argon PC', choices=[(0, 'No'), (1, 'Yes: incomplete resection'), (2, 'Yes: coagulation'), (3, 'Yes: per protocol')], null=True, blank=True)),
                ('coagulation_forceps', models.IntegerField(verbose_name='Coagulation forceps', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('snare_tip_soft_coagulation', models.IntegerField(verbose_name='Snare tip soft coagulation', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('cs_cut_watts', models.IntegerField(verbose_name='Cut (watts)', null=True, blank=True)),
                ('cs_cut_mode', models.IntegerField(verbose_name='Endocut mode', choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True, blank=True)),
                ('cs_coagulation_watts', models.IntegerField(verbose_name='Coagulation (watts)', null=True, blank=True)),
                ('cs_coagulation_mode', models.IntegerField(verbose_name='Coagulation mode', choices=[(0, 'Soft'), (1, 'Force')], null=True, blank=True)),
                ('clips_control_group', models.IntegerField(verbose_name='Clips control group', choices=[(0, 'No'), (1, 'Punctual coagulation')], null=True, blank=True)),
                ('clips_tratment_group', models.IntegerField(verbose_name='Clips treatment group', choices=[(1, 'Complete closure with complete mucosal apposition'), (2, 'Complete closure without complete mucosal apposition'), (3, 'Total failed closure'), (4, 'Partial failed closure'), (5, 'Closure not tried')], null=True, blank=True)),
                ('clips_n_lote', models.IntegerField(verbose_name='Lot number', null=True, blank=True)),
                ('clips_exp_date', models.DateField(verbose_name='Expiration date', null=True, blank=True)),
                ('not_tired_closure_by', models.IntegerField(verbose_name='Closure not tried because of', choices=[(1, 'Big size'), (2, 'Difficult location'), (3, 'Both')], null=True, blank=True)),
                ('closure_technique', models.IntegerField(verbose_name='Closure technique', choices=[(1, 'Simple clipping'), (2, 'Clip-Poly loop'), (3, 'Clip Silk loop')], null=True, blank=True)),
                ('number_clips_needed', models.IntegerField(verbose_name='Number of clips needed', null=True, blank=True)),
                ('perforation', models.IntegerField(verbose_name='Perforation', choices=[(0, 'No'), (1, 'Yes: endoscopic resolution'), (2, 'Yes: surgical resolution')], null=True, blank=True)),
                ('surgery_from_endoscopy', models.IntegerField(verbose_name='Surgery from endoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('surgery_by_complication', models.IntegerField(verbose_name='Surgery by complication', choices=[(0, 'No'), (1, 'Yes: bleeding'), (2, 'Yes: perforation')], null=True, blank=True)),
                ('bleeding', models.IntegerField(verbose_name='Bleeding', choices=[(0, 'No'), (1, 'During no clinical impact-autol'), (2, 'During exploration with clinical impact'), (3, '24h'), (4, '24-48h'), (5, '3-7 days'), (6, '>7 days')], null=True, blank=True)),
                ('immediate_bleeding', models.IntegerField(verbose_name='Immediate bleeding', choices=[(0, 'No'), (1, 'Yes: during exploration with clinical impact'), (2, 'Yes: during exploration without clinical impact')], null=True, blank=True)),
                ('delayed_bleeding', models.IntegerField(verbose_name='Delayed bleeding', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('bleeding_treatment', models.IntegerField(verbose_name='Bleeding treatment', choices=[(0, 'No'), (1, 'Inyection'), (2, 'Clipping'), (3, 'ArgonPC'), (4, 'Coagulation forceps'), (5, '2 methods')], null=True, blank=True)),
                ('transfusion', models.IntegerField(verbose_name='Transfusion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('pps', models.IntegerField(verbose_name='Post polypectomy syndrome', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fever', models.IntegerField(verbose_name='Fever', choices=[(0, 'No'), (1, '37-37.9'), (2, '38 or more')], null=True, blank=True)),
                ('pain_requiring_medical_intervention', models.IntegerField(verbose_name='Pain requiring medical intervantion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hospital_stay_by_technique', models.IntegerField(verbose_name='Hospital stay by technique', null=True, blank=True)),
                ('hospital_stay_by_complication', models.IntegerField(verbose_name='Hospital stay by complication', null=True, blank=True)),
                ('follow_up_months', models.IntegerField(verbose_name='Follow up months', null=True, blank=True)),
                ('successful_treatment', models.IntegerField(verbose_name=' Successful treatment', choices=[(0, 'No: surgical treatment'), (1, 'Yes: in 1 session (includes one or two steps'), (2, 'Yes, in 2 or more sessions (one session and treatment in controls')], null=True, blank=True)),
                ('sedation', models.IntegerField(verbose_name='Sedation', choices=[(0, 'Without sedation'), (1, 'By gastroenterologist other than Propofol'), (2, 'By gastroenterologist based on Propofol'), (3, 'By anesthesiologist')], null=True, blank=True)),
                ('last_date_endoscopic_follow_up', models.DateField(verbose_name='Last date endoscopic follow up', null=True, blank=True)),
                ('recurrence_three_six_months_control', models.IntegerField(verbose_name='Recurrence 3-6 months control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('recurrenec_one_year_control', models.IntegerField(verbose_name='Recurrence 1 year control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('global_recurrence', models.IntegerField(verbose_name='Global recurrence', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('other_complications_comments', models.TextField(verbose_name='Other complications comments', null=True, max_length=500, blank=True)),
                ('other_comments', models.TextField(verbose_name='Other comments', null=True, max_length=500, blank=True)),
                ('colonoscopy_indication', models.IntegerField(verbose_name='Colonoscopy indication', choices=[(1, 'Anemia/iron deficiency'), (2, 'CRC suspected'), (3, 'CRC screening program'), (4, 'Postpolypectomy surveillance'), (5, 'Relatives with CRC or polyposis'), (6, 'Polyposis'), (7, 'Other')], null=True, blank=True)),
                ('country', models.IntegerField(verbose_name='Country', choices=[(1, 'Spain'), (2, 'Japan'), (3, 'UK'), (4, 'USA'), (5, 'China')], null=True, blank=True)),
                ('depth', models.IntegerField(verbose_name='Depth', choices=[(1, 'Mucosa'), (2, 'SM1'), (3, 'SM2'), (4, 'SM3'), (5, 'MP or deeper')], null=True, blank=True)),
                ('depth_sm_invasion', models.FloatField(verbose_name='Depth (Sm invasion: ¬µ)', null=True, blank=True)),
                ('lymphatic_invasion', models.IntegerField(verbose_name='Lymphatic invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('vascular_invasion', models.IntegerField(verbose_name='Vascular invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('perineural_invasion', models.IntegerField(verbose_name='Perineural invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('budding', models.IntegerField(verbose_name='Budding', choices=[(0, 'No'), (1, 'High grade')], null=True, blank=True)),
                ('degree_differentiation', models.IntegerField(verbose_name='Degree differentiation', choices=[(1, 'Well'), (2, 'Moderate'), (3, 'Poorly')], null=True, blank=True)),
                ('histological_variants', models.IntegerField(verbose_name='Histological variants', choices=[(1, 'Adenocarcinoma'), (2, 'Mucinous'), (3, 'Medullary'), (4, 'Signet ring')], null=True, blank=True)),
                ('free_vertical_margins', models.IntegerField(verbose_name='Free vertical margins (>1mm)', choices=[(1, 'Nonassessable'), (2, 'Free'), (3, 'Affected')], null=True, blank=True)),
                ('free_horizontal_margins', models.IntegerField(verbose_name='Free horizontal margin (>1mm)', choices=[(1, 'Nonassessable'), (2, 'Free'), (3, 'Affected')], null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObsinternationalCase',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('group', models.IntegerField(verbose_name='Group', choices=[(0, 'Control group'), (1, 'Treatment group')], null=True, blank=True)),
                ('id_for_hospital', models.IntegerField(verbose_name='Id for hospital', null=True, blank=True)),
                ('id_for_doctor', models.IntegerField(verbose_name='Id for doctor', null=True, blank=True)),
                ('date', models.DateField(verbose_name='Date', null=True, blank=True)),
                ('age', models.IntegerField(verbose_name='Age', validators=[django.core.validators.MinValueValidator(0)], null=True, blank=True)),
                ('age_interval', models.IntegerField(verbose_name='Age interval', choices=[(1, '< 60'), (2, '60-74'), (3, '>= 75')], null=True, max_length=2, blank=True)),
                ('sex', models.IntegerField(verbose_name='Sex', choices=[(1, 'Male'), (2, 'Female')], null=True, max_length=1, blank=True)),
                ('asa', models.IntegerField(verbose_name='ASA', choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV')], null=True, blank=True)),
                ('hypertension', models.IntegerField(verbose_name='Hypertension', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hb', models.FloatField(verbose_name='HB (g/dL)', null=True, blank=True)),
                ('platelets', models.IntegerField(verbose_name='Platelets (x10‚Åπ/L)', null=True, blank=True)),
                ('inr', models.FloatField(verbose_name='INR', null=True, blank=True)),
                ('pt', models.IntegerField(verbose_name='PT (s)', null=True, blank=True)),
                ('aspirin', models.IntegerField(verbose_name='Aspirin', choices=[(0, 'No'), (1, '100mg cease'), (2, '300mg cease'), (3, '100mg during EMR'), (4, '300mg during EMR')], null=True, blank=True)),
                ('anticoagulants', models.IntegerField(verbose_name='Anticoagulants', choices=[(0, 'No'), (1, 'Aspirin'), (2, 'Clopidogrel'), (3, 'Other antiagregant'), (4, 'Warfarin'), (5, 'NSAID'), (6, '2 NSAID including aspiring or not'), (7, 'Aspirin+clopidogrel'), (8, 'NACOs')], null=True, blank=True)),
                ('heparinbridgetherapy', models.IntegerField(verbose_name='Heparin Bridge Therapy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nombre_p_activo_antiagreg_anticoag', models.IntegerField(verbose_name='Active ingredients anticoagulant/antiagregant', null=True, blank=True)),
                ('day_of_reintroduction_antiagregant', models.IntegerField(verbose_name='Day of reintroduction anticoagulant/antiagregant', null=True, blank=True)),
                ('paris_calif', models.IntegerField(verbose_name='Paris Clasif.', choices=[(1, '0Is'), (2, '0IIa'), (3, '0IIa+0Is'), (4, '0Is+0IIa'), (5, '0IIb'), (6, '0IIc'), (7, '0IIa+0IIc'), (8, '0IIb+0IIc'), (9, '0IIb+0IIa')], null=True, blank=True)),
                ('lst_yn', models.IntegerField(verbose_name='LST yn', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('lst_morphology', models.IntegerField(verbose_name='LST Morphology', choices=[(1, 'Granular homogeneous'), (2, 'Focal nodular mixed type'), (3, 'Whole nodular mixed type'), (4, 'Flat elevated'), (5, 'Psudodepressed')], null=True, blank=True)),
                ('large_nodule_one_cm', models.IntegerField(verbose_name='Large nodule 1cm', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('demacrated_depressed_area', models.IntegerField(verbose_name='Demacrated depressed area', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('sclerous_wall_change', models.IntegerField(verbose_name='Sclerous wall change', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fold_convergency', models.IntegerField(verbose_name='Fold convergency', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('chicken_skin_mucosa_around', models.IntegerField(verbose_name='Chicken skin mucosa around', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('maximum_size_mm', models.IntegerField(verbose_name='Maximum size (mm)', null=True, blank=True)),
                ('area_square_cm', models.IntegerField(verbose_name='Area (cm2)', null=True, blank=True)),
                ('location', models.IntegerField(verbose_name='Location', choices=[(1, 'Rectum'), (2, 'Left colon'), (3, 'Splenic flexure'), (4, 'Transverse'), (5, 'Hepatic'), (6, 'Ascendent'), (7, 'Cecum')], null=True, blank=True)),
                ('ileocecal_valve_involvement', models.IntegerField(verbose_name='Ileocecal valve involvement', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('high_definition', models.IntegerField(verbose_name='High definition', choices=[(1, 'Conventional endoscope'), (2, 'High definition'), (3, 'Optic magnification')], null=True, blank=True)),
                ('endoscopemodel', models.CharField(verbose_name='Endoscope model', null=True, max_length=50, blank=True)),
                ('nbi', models.IntegerField(verbose_name='NBI', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('nbi_sano', models.IntegerField(verbose_name='NBI sano', choices=[(1, 'I'), (2, 'II'), (3, 'IIIA'), (4, 'IIIB')], null=True, blank=True)),
                ('nbi_nice', models.IntegerField(verbose_name='NBI NICE', choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3')], null=True, blank=True)),
                ('cromoendoscopy', models.IntegerField(verbose_name='Cromoendoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('kudo', models.IntegerField(verbose_name='Kudo', choices=[(1, 'I'), (2, 'II'), (3, 'IIIS'), (4, 'IIIL'), (5, 'IV'), (6, 'V-I'), (7, 'V-N')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_a', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 1', choices=[(1, 'Adenoma'), (2, 'Serrated')], null=True, blank=True)),
                ('prepathologic_endoscopic_diagnostic_b', models.IntegerField(verbose_name='Prepathologic endoscopic diagnost 2', choices=[(1, 'NodisplasiaToSuperficial submucosal carcinoma'), (2, 'Deep submucosal carcinoma')], null=True, blank=True)),
                ('correct_dx_adenoma_serrated', models.IntegerField(verbose_name='Correct Dx Adenoma Serrated', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('correct_dx_invasion', models.IntegerField(verbose_name='Correct Dx Invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('histology', models.IntegerField(verbose_name='Histology', choices=[(1, 'Adenoma'), (2, 'HGD-intraepitelial carcinoma in adenoma'), (3, 'Intramucosal carcinoma in adenoma'), (4, 'Superficial submucosal carcinoma in adenoma'), (5, 'Deep submucosal carcinoma in adenoma'), (6, 'Hyperplastic'), (7, 'Sesil Serrated polyp'), (8, 'Traditional Serrated Adenoma'), (9, 'Polyp Serrated Mixed or serrated polyp with dysplasia'), (10, 'Intraepitelial carcinoma Any serrated'), (11, 'Intramucosal carcinoma Any serrated'), (12, 'Superficial submucosa carc. Any serrated'), (13, 'Deep submucosa carc. Any serrated'), (14, 'Carinoid')], null=True, blank=True)),
                ('histol_simplified', models.IntegerField(verbose_name='Histology simplified', choices=[(1, 'Adenoma'), (2, 'HGD-Imucosal'), (3, 'Invasive adenoma'), (4, 'Serrated'), (5, 'HGD-Imucosal serrated'), (6, 'Invasive serrated'), (7, 'Carcinoid')], null=True, blank=True)),
                ('time_of_procedure_in_mins', models.IntegerField(verbose_name='Time of procedure (m)', null=True, blank=True)),
                ('difficulty_of_emr', models.IntegerField(verbose_name='Dificutly of EMR', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('accesibility', models.IntegerField(verbose_name='Accesibility', choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], null=True, blank=True)),
                ('resection', models.IntegerField(verbose_name='Resection', choices=[(1, 'Piecemeal complete'), (2, 'Piecemeal incomplete'), (3, 'En bloc R0'), (4, 'En bloq incomplete')], null=True, blank=True)),
                ('previous_biopsy', models.IntegerField(verbose_name='Previous biopsy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('previous_attempt', models.IntegerField(verbose_name='Previous attempt', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('non_lifting_sign', models.IntegerField(verbose_name='Non lifting sign', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('technique', models.IntegerField(verbose_name='Technique', choices=[(1, 'EMR'), (2, 'Hybrid-EMR')], null=True, blank=True)),
                ('technique_two', models.IntegerField(verbose_name=' Technique 2', choices=[(1, 'One-step'), (2, 'Two-steps')], null=True, blank=True)),
                ('limit_marks', models.IntegerField(verbose_name='Limit marks', choices=[(0, 'No marks'), (1, 'APC marks')], null=True, blank=True)),
                ('injection', models.IntegerField(verbose_name='Injection', choices=[(0, 'No'), (1, 'Saline'), (2, 'Glicerin'), (3, 'Hyaluronic'), (4, 'Hidrox-propil-cellulose: VOLUVEN(r)'), (5, 'Gelafundin'), (6, 'Others')], null=True, blank=True)),
                ('adrenaline', models.IntegerField(verbose_name='Adrenaline', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('endocut', models.IntegerField(verbose_name='Endocut/Blended', choices=[(1, 'Only cut current'), (2, 'Only coagulation current'), (3, 'Endocut/Blended')], null=True, blank=True)),
                ('electrosurgical_generator_model', models.CharField(verbose_name='Electrosurgical generator model', null=True, max_length=100, blank=True)),
                ('polyp_retrieval', models.IntegerField(verbose_name='Polyp retrieval', choices=[(1, 'Roth net'), (2, 'By aspiration'), (3, 'Both methods'), (4, 'By snare')], null=True, blank=True)),
                ('argon_PC', models.IntegerField(verbose_name='Argon PC', choices=[(0, 'No'), (1, 'Yes: incomplete resection'), (2, 'Yes: coagulation'), (3, 'Yes: per protocol')], null=True, blank=True)),
                ('coagulation_forceps', models.IntegerField(verbose_name='Coagulation forceps', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('snare_tip_soft_coagulation', models.IntegerField(verbose_name='Snare tip soft coagulation', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('cs_cut_watts', models.IntegerField(verbose_name='Cut (watts)', null=True, blank=True)),
                ('cs_cut_mode', models.IntegerField(verbose_name='Endocut mode', choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True, blank=True)),
                ('cs_coagulation_watts', models.IntegerField(verbose_name='Coagulation (watts)', null=True, blank=True)),
                ('cs_coagulation_mode', models.IntegerField(verbose_name='Coagulation mode', choices=[(0, 'Soft'), (1, 'Force')], null=True, blank=True)),
                ('clips_control_group', models.IntegerField(verbose_name='Clips control group', choices=[(0, 'No'), (1, 'Punctual coagulation')], null=True, blank=True)),
                ('clips_tratment_group', models.IntegerField(verbose_name='Clips treatment group', choices=[(1, 'Complete closure with complete mucosal apposition'), (2, 'Complete closure without complete mucosal apposition'), (3, 'Total failed closure'), (4, 'Partial failed closure'), (5, 'Closure not tried')], null=True, blank=True)),
                ('clips_n_lote', models.IntegerField(verbose_name='Lot number', null=True, blank=True)),
                ('clips_exp_date', models.DateField(verbose_name='Expiration date', null=True, blank=True)),
                ('not_tired_closure_by', models.IntegerField(verbose_name='Closure not tried because of', choices=[(1, 'Big size'), (2, 'Difficult location'), (3, 'Both')], null=True, blank=True)),
                ('closure_technique', models.IntegerField(verbose_name='Closure technique', choices=[(1, 'Simple clipping'), (2, 'Clip-Poly loop'), (3, 'Clip Silk loop')], null=True, blank=True)),
                ('number_clips_needed', models.IntegerField(verbose_name='Number of clips needed', null=True, blank=True)),
                ('perforation', models.IntegerField(verbose_name='Perforation', choices=[(0, 'No'), (1, 'Yes: endoscopic resolution'), (2, 'Yes: surgical resolution')], null=True, blank=True)),
                ('surgery_from_endoscopy', models.IntegerField(verbose_name='Surgery from endoscopy', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('surgery_by_complication', models.IntegerField(verbose_name='Surgery by complication', choices=[(0, 'No'), (1, 'Yes: bleeding'), (2, 'Yes: perforation')], null=True, blank=True)),
                ('bleeding', models.IntegerField(verbose_name='Bleeding', choices=[(0, 'No'), (1, 'During no clinical impact-autol'), (2, 'During exploration with clinical impact'), (3, '24h'), (4, '24-48h'), (5, '3-7 days'), (6, '>7 days')], null=True, blank=True)),
                ('immediate_bleeding', models.IntegerField(verbose_name='Immediate bleeding', choices=[(0, 'No'), (1, 'Yes: during exploration with clinical impact'), (2, 'Yes: during exploration without clinical impact')], null=True, blank=True)),
                ('delayed_bleeding', models.IntegerField(verbose_name='Delayed bleeding', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('bleeding_treatment', models.IntegerField(verbose_name='Bleeding treatment', choices=[(0, 'No'), (1, 'Inyection'), (2, 'Clipping'), (3, 'ArgonPC'), (4, 'Coagulation forceps'), (5, '2 methods')], null=True, blank=True)),
                ('transfusion', models.IntegerField(verbose_name='Transfusion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('pps', models.IntegerField(verbose_name='Post polypectomy syndrome', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('fever', models.IntegerField(verbose_name='Fever', choices=[(0, 'No'), (1, '37-37.9'), (2, '38 or more')], null=True, blank=True)),
                ('pain_requiring_medical_intervention', models.IntegerField(verbose_name='Pain requiring medical intervantion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('hospital_stay_by_technique', models.IntegerField(verbose_name='Hospital stay by technique', null=True, blank=True)),
                ('hospital_stay_by_complication', models.IntegerField(verbose_name='Hospital stay by complication', null=True, blank=True)),
                ('follow_up_months', models.IntegerField(verbose_name='Follow up months', null=True, blank=True)),
                ('successful_treatment', models.IntegerField(verbose_name=' Successful treatment', choices=[(0, 'No: surgical treatment'), (1, 'Yes: in 1 session (includes one or two steps'), (2, 'Yes, in 2 or more sessions (one session and treatment in controls')], null=True, blank=True)),
                ('sedation', models.IntegerField(verbose_name='Sedation', choices=[(0, 'Without sedation'), (1, 'By gastroenterologist other than Propofol'), (2, 'By gastroenterologist based on Propofol'), (3, 'By anesthesiologist')], null=True, blank=True)),
                ('last_date_endoscopic_follow_up', models.DateField(verbose_name='Last date endoscopic follow up', null=True, blank=True)),
                ('recurrence_three_six_months_control', models.IntegerField(verbose_name='Recurrence 3-6 months control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('recurrenec_one_year_control', models.IntegerField(verbose_name='Recurrence 1 year control', choices=[(0, 'No'), (1, 'Yes: positive biopsy: endoscopic treatment'), (2, 'Yes: visible recurrence: endoscopic treatment'), (3, 'Yes: surgical treatment needed')], null=True, blank=True)),
                ('global_recurrence', models.IntegerField(verbose_name='Global recurrence', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('other_complications_comments', models.TextField(verbose_name='Other complications comments', null=True, max_length=500, blank=True)),
                ('other_comments', models.TextField(verbose_name='Other comments', null=True, max_length=500, blank=True)),
                ('colonoscopy_indication', models.IntegerField(verbose_name='Colonoscopy indication', choices=[(1, 'Anemia/iron deficiency'), (2, 'CRC suspected'), (3, 'CRC screening program'), (4, 'Postpolypectomy surveillance'), (5, 'Relatives with CRC or polyposis'), (6, 'Polyposis'), (7, 'Other')], null=True, blank=True)),
                ('country', models.IntegerField(verbose_name='Country', choices=[(1, 'Spain'), (2, 'Japan'), (3, 'UK'), (4, 'USA'), (5, 'China')], null=True, blank=True)),
                ('depth', models.IntegerField(verbose_name='Depth', choices=[(1, 'Mucosa'), (2, 'SM1'), (3, 'SM2'), (4, 'SM3'), (5, 'MP or deeper')], null=True, blank=True)),
                ('depth_sm_invasion', models.FloatField(verbose_name='Depth (Sm invasion: ¬µ)', null=True, blank=True)),
                ('lymphatic_invasion', models.IntegerField(verbose_name='Lymphatic invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('vascular_invasion', models.IntegerField(verbose_name='Vascular invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('perineural_invasion', models.IntegerField(verbose_name='Perineural invasion', choices=[(0, 'No'), (1, 'Yes')], null=True, blank=True)),
                ('budding', models.IntegerField(verbose_name='Budding', choices=[(0, 'No'), (1, 'High grade')], null=True, blank=True)),
                ('degree_differentiation', models.IntegerField(verbose_name='Degree differentiation', choices=[(1, 'Well'), (2, 'Moderate'), (3, 'Poorly')], null=True, blank=True)),
                ('histological_variants', models.IntegerField(verbose_name='Histological variants', choices=[(1, 'Adenocarcinoma'), (2, 'Mucinous'), (3, 'Medullary'), (4, 'Signet ring')], null=True, blank=True)),
                ('free_vertical_margins', models.IntegerField(verbose_name='Free vertical margins (>1mm)', choices=[(1, 'Nonassessable'), (2, 'Free'), (3, 'Affected')], null=True, blank=True)),
                ('free_horizontal_margins', models.IntegerField(verbose_name='Free horizontal margin (>1mm)', choices=[(1, 'Nonassessable'), (2, 'Free'), (3, 'Affected')], null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('study_type', models.CharField(max_length=64, choices=[('clips', 'Clips Study'), ('cancer', 'Cancer Study'), ('observational', 'Observational Study'), ('obsinternational', 'International Observational Study')], verbose_name='Study type')),
            ],
            options={
                'verbose_name_plural': 'Studies',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('hospital', models.ForeignKey(null=True, to='studies_app.Hospital')),
                ('studies', models.ManyToManyField(to='studies_app.Study')),
                ('user', models.OneToOneField(related_name='clips_userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='obsinternationalcase',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, verbose_name='Doctor', to='studies_app.UserProfile'),
        ),
        migrations.AddField(
            model_name='obsinternationalcase',
            name='study',
            field=models.ForeignKey(related_name='cases_obsinternationalcase', verbose_name='Study', to='studies_app.Study'),
        ),
        migrations.AddField(
            model_name='observationalcase',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, verbose_name='Doctor', to='studies_app.UserProfile'),
        ),
        migrations.AddField(
            model_name='observationalcase',
            name='study',
            field=models.ForeignKey(related_name='cases_observationalcase', verbose_name='Study', to='studies_app.Study'),
        ),
        migrations.AddField(
            model_name='clipscase',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, verbose_name='Doctor', to='studies_app.UserProfile'),
        ),
        migrations.AddField(
            model_name='clipscase',
            name='study',
            field=models.ForeignKey(related_name='cases_clipscase', verbose_name='Study', to='studies_app.Study'),
        ),
        migrations.AddField(
            model_name='cancercase',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, verbose_name='Doctor', to='studies_app.UserProfile'),
        ),
        migrations.AddField(
            model_name='cancercase',
            name='study',
            field=models.ForeignKey(related_name='cases_cancercase', verbose_name='Study', to='studies_app.Study'),
        ),
    ]
